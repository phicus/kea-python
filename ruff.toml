# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Flake8
line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py38"

# jcruz: pre-commit
force-exclude = true

show-fixes = true
[lint]
select = ["C", "E", "R", "W", "PL", # pylint, pycodestyle
"F", # Flake8
"I", # isort,
"PL",
"B", "A", "BLE", # bugbear, otros errores que pueden causar bugs
"S", # bandit, seguridad
"DJ", # django
"ANN", "FA", "TCH", # type annotations
"C901", "SIM", # complejidad - simplificar
"RET", "PIE", # estilo de codigo - cosas innecesarias,
"FLY", # f-strings en vez de concatenacion de strings, .format o formato con %
"PT", # pytest
"RUF", # reglas personalizadas de ruff
"PTH" # usar pathlib!! es mucho más simple que os.path y más moderno
]

ignore = [
"ANN101", # argumentos self sin tipo,
"ANN102", # argumentos cls sin tipo
"ANN204", # retornos de __str__, __dict__, etc sin tipado
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


# custom: jcruz
[lint.flake8-annotations]
mypy-init-return = true # quitar que te pidan tipar el __init__
suppress-none-returning = true # falta de tipado en el return en funciones que no retornan nada

[lint.isort]
known-first-party = ["krill*", "kapi*", "*icinga*", "webapp"]

# Ignores en los tests:
# S-Bandit (no le gustan los asserts)
# ANN-Anotaciones
# RUF-Ruff
# PLR-Pylint (no le gustan las comparaciones con valores hardcodeados)
[lint.per-file-ignores]
"test_*" = ["S", "ANN", "PLR", "RUF"]
"*_test*" = ["S", "ANN", "PLR", "RUF"]
"*test*" = ["S", "ANN", "PLR", "RUF"]

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
